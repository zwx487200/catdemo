<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.TodoItemMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.TodoItem">
    <id column="id" jdbcType="VARCHAR" property="id"/>
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="repeat_rule" jdbcType="VARCHAR" property="repeatRule"/>
    <result column="family_id" jdbcType="VARCHAR" property="familyId"/>
    <result column="family_member_id" jdbcType="VARCHAR" property="familyMemberId"/>
    <result column="user_id" jdbcType="VARCHAR" property="userId"/>
    <result column="start_date" jdbcType="DATE" property="startDate"/>
    <result column="end_date" jdbcType="DATE" property="endDate"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.catdemo.entity.TodoItem">
    <result column="description" jdbcType="LONGVARCHAR" property="description"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, repeat_rule, family_id, family_member_id, user_id, start_date, 
	end_date
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>

  <select id="selectByExampleWithBLOBs" parameterType="com.example.catdemo.entity.TodoItemExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from todo_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.TodoItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from todo_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from todo_item
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from todo_item
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.TodoItemExample">
    delete from todo_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.TodoItem">

    insert into todo_item(id, title, description, repeat_rule,
	 family_id, family_member_id, user_id, start_date, 
	 end_date)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, #{repeatRule,jdbcType=VARCHAR},
	 #{familyId,jdbcType=VARCHAR}, #{familyMemberId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, 
	 #{endDate,jdbcType=DATE})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.TodoItem">

    insert into todo_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="repeatRule != null">
        repeat_rule,
      </if>
      <if test="familyId != null">
        family_id,
      </if>
      <if test="familyMemberId != null">
        family_member_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="repeatRule != null">
        #{repeatRule,jdbcType=VARCHAR},
      </if>
      <if test="familyId != null">
        #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="familyMemberId != null">
        #{familyMemberId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.TodoItemExample" resultType="java.lang.Long">
    select count(*) from todo_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update todo_item
    <set>
      <if test="record.id != null">
       id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
       title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
       description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.repeatRule != null">
       repeat_rule = #{record.repeatRule,jdbcType=VARCHAR},
      </if>
      <if test="record.familyId != null">
       family_id = #{record.familyId,jdbcType=VARCHAR},
      </if>
      <if test="record.familyMemberId != null">
       family_member_id = #{record.familyMemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
       user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
       start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
       end_date = #{record.endDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExampleWithBLOBs" parameterType="map">
    update todo_item
    set id = #{record.id,jdbcType=VARCHAR},
	  title = #{record.title,jdbcType=VARCHAR},
	  description = #{record.description,jdbcType=LONGVARCHAR},
	  repeat_rule = #{record.repeatRule,jdbcType=VARCHAR},
	  family_id = #{record.familyId,jdbcType=VARCHAR},
	  family_member_id = #{record.familyMemberId,jdbcType=VARCHAR},
	  user_id = #{record.userId,jdbcType=VARCHAR},
	  start_date = #{record.startDate,jdbcType=DATE},
	  end_date = #{record.endDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update todo_item
    set id = #{record.id,jdbcType=VARCHAR},
	  title = #{record.title,jdbcType=VARCHAR},
	  repeat_rule = #{record.repeatRule,jdbcType=VARCHAR},
	  family_id = #{record.familyId,jdbcType=VARCHAR},
	  family_member_id = #{record.familyMemberId,jdbcType=VARCHAR},
	  user_id = #{record.userId,jdbcType=VARCHAR},
	  start_date = #{record.startDate,jdbcType=DATE},
	  end_date = #{record.endDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.TodoItem">
    update todo_item
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="repeatRule != null">
        repeat_rule = #{repeatRule,jdbcType=VARCHAR},
      </if>
      <if test="familyId != null">
        family_id = #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="familyMemberId != null">
        family_member_id = #{familyMemberId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.catdemo.entity.TodoItem">
    update todo_item
    set title = #{title,jdbcType=VARCHAR},
	  description = #{description,jdbcType=LONGVARCHAR},
	  repeat_rule = #{repeatRule,jdbcType=VARCHAR},
	  family_id = #{familyId,jdbcType=VARCHAR},
	  family_member_id = #{familyMemberId,jdbcType=VARCHAR},
	  user_id = #{userId,jdbcType=VARCHAR},
	  start_date = #{startDate,jdbcType=DATE},
	  end_date = #{endDate,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.TodoItem">
    update todo_item
    set title = #{title,jdbcType=VARCHAR},
	  repeat_rule = #{repeatRule,jdbcType=VARCHAR},
	  family_id = #{familyId,jdbcType=VARCHAR},
	  family_member_id = #{familyMemberId,jdbcType=VARCHAR},
	  user_id = #{userId,jdbcType=VARCHAR},
	  start_date = #{startDate,jdbcType=DATE},
	  end_date = #{endDate,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
