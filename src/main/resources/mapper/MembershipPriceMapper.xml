<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.MembershipPriceMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.MembershipPrice">
    <id column="price_id" jdbcType="VARCHAR" property="priceId"/>
    <result column="level_id" jdbcType="VARCHAR" property="levelId"/>
    <result column="price_amount" jdbcType="DECIMAL" property="priceAmount"/>
    <result column="duration_unit" jdbcType="CHAR" property="durationUnit"/>
    <result column="duration" jdbcType="INTEGER" property="duration"/>
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
  </resultMap>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    price_id, level_id, price_amount, duration_unit, duration, created_at, updated_at
  </sql>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.MembershipPriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from membership_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByLevelId" parameterType="java.lang.String" resultMap="BaseResultMap">
          select
    <include refid="Base_Column_List" />
    from membership_price
    where level_id = #{levelId,jdbcType=VARCHAR}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from membership_price
    where price_id = #{priceId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from membership_price
    where price_id = #{priceId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.MembershipPriceExample">
    delete from membership_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.MembershipPrice">

    insert into membership_price(price_id,level_id, price_amount, duration_unit,
	 duration, created_at, updated_at)
    values (UUID(), #{levelId,jdbcType=VARCHAR}, #{priceAmount,jdbcType=DECIMAL}, #{durationUnit,jdbcType=CHAR},
	 #{duration,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.MembershipPrice">

    insert into membership_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
        price_id,
      <if test="levelId != null">
        level_id,
      </if>
      <if test="priceAmount != null">
        price_amount,
      </if>
      <if test="durationUnit != null">
        duration_unit,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        uuid(),
      <if test="levelId != null">
        #{levelId,jdbcType=VARCHAR},
      </if>
      <if test="priceAmount != null">
        #{priceAmount,jdbcType=DECIMAL},
      </if>
      <if test="durationUnit != null">
        #{durationUnit,jdbcType=CHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.MembershipPriceExample" resultType="java.lang.Long">
    select count(*) from membership_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update membership_price
    <set>
      <if test="record.priceId != null">
       price_id = #{record.priceId,jdbcType=VARCHAR},
      </if>
      <if test="record.levelId != null">
       level_id = #{record.levelId,jdbcType=VARCHAR},
      </if>
      <if test="record.priceAmount != null">
       price_amount = #{record.priceAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.durationUnit != null">
       duration_unit = #{record.durationUnit,jdbcType=CHAR},
      </if>
      <if test="record.duration != null">
       duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
       created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
       updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update membership_price
    set price_id = #{record.priceId,jdbcType=VARCHAR},
	  level_id = #{record.levelId,jdbcType=VARCHAR},
	  price_amount = #{record.priceAmount,jdbcType=DECIMAL},
	  duration_unit = #{record.durationUnit,jdbcType=CHAR},
	  duration = #{record.duration,jdbcType=INTEGER},
	  created_at = #{record.createdAt,jdbcType=TIMESTAMP},
	  updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.MembershipPrice">
    update membership_price
    <set>
      <if test="levelId != null">
        level_id = #{levelId,jdbcType=VARCHAR},
      </if>
      <if test="priceAmount != null">
        price_amount = #{priceAmount,jdbcType=DECIMAL},
      </if>
      <if test="durationUnit != null">
        duration_unit = #{durationUnit,jdbcType=CHAR},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where price_id = #{priceId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.MembershipPrice">
    update membership_price
    set level_id = #{levelId,jdbcType=VARCHAR},
	  price_amount = #{priceAmount,jdbcType=DECIMAL},
	  duration_unit = #{durationUnit,jdbcType=CHAR},
	  duration = #{duration,jdbcType=INTEGER},
	  created_at = #{createdAt,jdbcType=TIMESTAMP},
	  updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where price_id = #{priceId,jdbcType=VARCHAR}
  </update>
</mapper>
