<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.User">
    <id column="userId" jdbcType="VARCHAR" property="userId"/>
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="email" jdbcType="VARCHAR" property="email"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="role" jdbcType="VARCHAR" property="role"/>
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime"/>
    <result column="lastLoginIp" jdbcType="VARCHAR" property="lastLoginIp"/>
    <result column="status" jdbcType="VARCHAR" property="status"/>
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="headImage" jdbcType="VARCHAR" property="headImage"/>
    <result column="belongTo" jdbcType="VARCHAR" property="belongTo"/>
    <result column="memberShip" jdbcType="VARCHAR" property="memberShip"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, username, password, email, phone, role, lastLoginTime, 
	lastLoginIp, status, memberShip, createTime, updateTime, headImage, belongTo
  </sql>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where userId = #{userId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where userId = #{userId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.User">
    insert into user(username, password, email,
	 phone, role, lastLoginTime, lastLoginIp, 
	 status, createTime, updateTime, headImage, 
	 belongTo)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
	 #{phone,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, 
	 #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{headImage,jdbcType=VARCHAR}, 
	 #{belongTo,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="userId != null">
          userId,
        </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime,
      </if>
      <if test="lastLoginIp != null">
        lastLoginIp,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="headImage != null">
        headImage,
      </if>
      <if test="belongTo != null">
        belongTo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="belongTo != null">
        #{belongTo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
       userId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
       username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
       password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
       email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
       phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
       role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
       lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIp != null">
       lastLoginIp = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
       status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
       createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
       updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.headImage != null">
       headImage = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.belongTo != null">
       belongTo = #{record.belongTo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update user
    set userId = #{record.userId,jdbcType=VARCHAR},
	  username = #{record.username,jdbcType=VARCHAR},
	  password = #{record.password,jdbcType=VARCHAR},
	  email = #{record.email,jdbcType=VARCHAR},
	  phone = #{record.phone,jdbcType=VARCHAR},
	  role = #{record.role,jdbcType=VARCHAR},
	  lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
	  lastLoginIp = #{record.lastLoginIp,jdbcType=VARCHAR},
	  status = #{record.status,jdbcType=VARCHAR},
	  createTime = #{record.createTime,jdbcType=TIMESTAMP},
	  updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
	  headImage = #{record.headImage,jdbcType=VARCHAR},
	  belongTo = #{record.belongTo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        lastLoginIp = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headImage != null">
        headImage = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="belongTo != null">
        belongTo = #{belongTo,jdbcType=VARCHAR},
      </if>
      <if test="memberShip != null">
        memberShip = #{memberShip,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
	  password = #{password,jdbcType=VARCHAR},
	  email = #{email,jdbcType=VARCHAR},
	  phone = #{phone,jdbcType=VARCHAR},
	  role = #{role,jdbcType=VARCHAR},
	  lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
	  lastLoginIp = #{lastLoginIp,jdbcType=VARCHAR},
	  status = #{status,jdbcType=VARCHAR},
	  createTime = #{createTime,jdbcType=TIMESTAMP},
	  updateTime = #{updateTime,jdbcType=TIMESTAMP},
	  headImage = #{headImage,jdbcType=VARCHAR},
	  belongTo = #{belongTo,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>
