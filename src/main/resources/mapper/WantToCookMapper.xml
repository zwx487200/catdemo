<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.WantToCookMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.WantToCook">
    <id column="id" jdbcType="VARCHAR" property="id"/>
    <result column="recipe_id" jdbcType="VARCHAR" property="recipeId"/>
    <result column="user_id" jdbcType="VARCHAR" property="userId"/>
    <result column="family_id" jdbcType="VARCHAR" property="familyId"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="planned_cooking_time" jdbcType="TIMESTAMP" property="plannedCookingTime"/>
    <result column="expiry_time" jdbcType="TIMESTAMP" property="expiryTime"/>
    <result column="priority" jdbcType="TINYINT" property="priority"/>
    <result column="status" jdbcType="TINYINT" property="status"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, recipe_id, user_id, family_id, create_time, planned_cooking_time, expiry_time, 
	priority, status
  </sql>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.WantToCookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from want_to_cook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from want_to_cook
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from want_to_cook
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.WantToCookExample">
    delete from want_to_cook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.WantToCook">

    insert into want_to_cook(id, recipe_id, user_id, family_id,
	 create_time, planned_cooking_time, expiry_time, priority, 
	 status)
    values (#{id,jdbcType=VARCHAR}, #{recipeId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{familyId,jdbcType=VARCHAR},
	 #{createTime,jdbcType=TIMESTAMP}, #{plannedCookingTime,jdbcType=TIMESTAMP}, #{expiryTime,jdbcType=TIMESTAMP}, #{priority,jdbcType=TINYINT}, 
	 #{status,jdbcType=TINYINT})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.WantToCook">
    insert into want_to_cook
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
        id,
      </if>
      <if test="recipeId != null">
        recipe_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="familyId != null">
        family_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="plannedCookingTime != null">
        planned_cooking_time,
      </if>
      <if test="expiryTime != null">
        expiry_time,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="recipeId != null">
        #{recipeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="familyId != null">
        #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plannedCookingTime != null">
        #{plannedCookingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiryTime != null">
        #{expiryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.WantToCookExample" resultType="java.lang.Long">
    select count(*) from want_to_cook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update want_to_cook
    <set>
      <if test="record.id != null">
       id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.recipeId != null">
       recipe_id = #{record.recipeId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
       user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.familyId != null">
       family_id = #{record.familyId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
       create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plannedCookingTime != null">
       planned_cooking_time = #{record.plannedCookingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiryTime != null">
       expiry_time = #{record.expiryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.priority != null">
       priority = #{record.priority,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
       status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update want_to_cook
    set id = #{record.id,jdbcType=VARCHAR},
	  recipe_id = #{record.recipeId,jdbcType=VARCHAR},
	  user_id = #{record.userId,jdbcType=VARCHAR},
	  family_id = #{record.familyId,jdbcType=VARCHAR},
	  create_time = #{record.createTime,jdbcType=TIMESTAMP},
	  planned_cooking_time = #{record.plannedCookingTime,jdbcType=TIMESTAMP},
	  expiry_time = #{record.expiryTime,jdbcType=TIMESTAMP},
	  priority = #{record.priority,jdbcType=TINYINT},
	  status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.WantToCook">
    update want_to_cook
    <set>
      <if test="recipeId != null">
        recipe_id = #{recipeId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="familyId != null">
        family_id = #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plannedCookingTime != null">
        planned_cooking_time = #{plannedCookingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiryTime != null">
        expiry_time = #{expiryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.WantToCook">
    update want_to_cook
    set recipe_id = #{recipeId,jdbcType=VARCHAR},
	  user_id = #{userId,jdbcType=VARCHAR},
	  family_id = #{familyId,jdbcType=VARCHAR},
	  create_time = #{createTime,jdbcType=TIMESTAMP},
	  planned_cooking_time = #{plannedCookingTime,jdbcType=TIMESTAMP},
	  expiry_time = #{expiryTime,jdbcType=TIMESTAMP},
	  priority = #{priority,jdbcType=TINYINT},
	  status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
