<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.CookingStepsMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.CookingSteps">
    <id column="cooking_step_id" jdbcType="VARCHAR" property="cookingStepId"/>
    <result column="recipe_id" jdbcType="VARCHAR" property="recipeId"/>
    <result column="step_order" jdbcType="TINYINT" property="stepOrder"/>
    <result column="step_image" jdbcType="VARCHAR" property="stepImage"/>
    <result column="estimated_time" jdbcType="SMALLINT" property="estimatedTime"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.catdemo.entity.CookingSteps">
    <result column="custom_notes" jdbcType="LONGVARCHAR" property="customNotes"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cooking_step_id, recipe_id, step_order, step_image, estimated_time
  </sql>
  <sql id="Blob_Column_List">
    custom_notes
  </sql>

  <select id="selectByExampleWithBLOBs" parameterType="com.example.catdemo.entity.CookingStepsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cooking_steps
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.CookingStepsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cooking_steps
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cooking_steps
    where cooking_step_id = #{cookingStepId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from cooking_steps
    where cooking_step_id = #{cookingStepId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.CookingStepsExample">
    delete from cooking_steps
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.CookingSteps">
    insert into cooking_steps(cooking_step_id, recipe_id, step_order, custom_notes,
	 step_image, estimated_time)
    values (  #{cookingStepId,jdbcType=VARCHAR}, #{recipeId,jdbcType=VARCHAR}, #{stepOrder,jdbcType=TINYINT}, #{customNotes,jdbcType=LONGVARCHAR},
	 #{stepImage,jdbcType=VARCHAR}, #{estimatedTime,jdbcType=SMALLINT})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.CookingSteps">

    insert into cooking_steps
    <trim prefix="(" suffix=")" suffixOverrides=",">
         <if test="cookingStepId != null">
        cooking_step_id,
      </if>
      <if test="recipeId != null">
        recipe_id,
      </if>
      <if test="stepOrder != null">
        step_order,
      </if>
      <if test="customNotes != null">
        custom_notes,
      </if>
      <if test="stepImage != null">
        step_image,
      </if>
      <if test="estimatedTime != null">
        estimated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="cookingStepId != null">
        #{cookingStepId,jdbcType=VARCHAR},
      </if>
      <if test="recipeId != null">
        #{recipeId,jdbcType=VARCHAR},
      </if>
      <if test="stepOrder != null">
        #{stepOrder,jdbcType=TINYINT},
      </if>
      <if test="customNotes != null">
        #{customNotes,jdbcType=LONGVARCHAR},
      </if>
      <if test="stepImage != null">
        #{stepImage,jdbcType=VARCHAR},
      </if>
      <if test="estimatedTime != null">
        #{estimatedTime,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.CookingStepsExample" resultType="java.lang.Long">
    select count(*) from cooking_steps
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update cooking_steps
    <set>
      <if test="record.cookingStepId != null">
       cooking_step_id = #{record.cookingStepId,jdbcType=VARCHAR},
      </if>
      <if test="record.recipeId != null">
       recipe_id = #{record.recipeId,jdbcType=VARCHAR},
      </if>
      <if test="record.stepOrder != null">
       step_order = #{record.stepOrder,jdbcType=TINYINT},
      </if>
      <if test="record.customNotes != null">
       custom_notes = #{record.customNotes,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.stepImage != null">
       step_image = #{record.stepImage,jdbcType=VARCHAR},
      </if>
      <if test="record.estimatedTime != null">
       estimated_time = #{record.estimatedTime,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cooking_steps
    set cooking_step_id = #{record.cookingStepId,jdbcType=VARCHAR},
	  recipe_id = #{record.recipeId,jdbcType=VARCHAR},
	  step_order = #{record.stepOrder,jdbcType=TINYINT},
	  custom_notes = #{record.customNotes,jdbcType=LONGVARCHAR},
	  step_image = #{record.stepImage,jdbcType=VARCHAR},
	  estimated_time = #{record.estimatedTime,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update cooking_steps
    set cooking_step_id = #{record.cookingStepId,jdbcType=VARCHAR},
	  recipe_id = #{record.recipeId,jdbcType=VARCHAR},
	  step_order = #{record.stepOrder,jdbcType=TINYINT},
	  step_image = #{record.stepImage,jdbcType=VARCHAR},
	  estimated_time = #{record.estimatedTime,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.CookingSteps">
    update cooking_steps
    <set>
      <if test="recipeId != null">
        recipe_id = #{recipeId,jdbcType=VARCHAR},
      </if>
      <if test="stepOrder != null">
        step_order = #{stepOrder,jdbcType=TINYINT},
      </if>
      <if test="customNotes != null">
        custom_notes = #{customNotes,jdbcType=LONGVARCHAR},
      </if>
      <if test="stepImage != null">
        step_image = #{stepImage,jdbcType=VARCHAR},
      </if>
      <if test="estimatedTime != null">
        estimated_time = #{estimatedTime,jdbcType=SMALLINT},
      </if>
    </set>
    where cooking_step_id = #{cookingStepId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.catdemo.entity.CookingSteps">
    update cooking_steps
    set recipe_id = #{recipeId,jdbcType=VARCHAR},
	  step_order = #{stepOrder,jdbcType=TINYINT},
	  custom_notes = #{customNotes,jdbcType=LONGVARCHAR},
	  step_image = #{stepImage,jdbcType=VARCHAR},
	  estimated_time = #{estimatedTime,jdbcType=SMALLINT}
    where cooking_step_id = #{cookingStepId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.CookingSteps">
    update cooking_steps
    set recipe_id = #{recipeId,jdbcType=VARCHAR},
	  step_order = #{stepOrder,jdbcType=TINYINT},
	  step_image = #{stepImage,jdbcType=VARCHAR},
	  estimated_time = #{estimatedTime,jdbcType=SMALLINT}
    where cooking_step_id = #{cookingStepId,jdbcType=VARCHAR}
  </update>
</mapper>
