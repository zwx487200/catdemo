<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.RecipesMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.Recipes">
    <id column="recipe_id" jdbcType="VARCHAR" property="recipeId"/>
    <result column="family_id" jdbcType="VARCHAR" property="familyId"/>
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId"/>
    <result column="food_name" jdbcType="VARCHAR" property="foodName"/>
    <result column="servings" jdbcType="TINYINT" property="servings"/>
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    recipe_id, family_id, creator_id, food_name, servings, created_at, updated_at
  </sql>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.RecipesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recipes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from recipes
    where recipe_id = #{recipeId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from recipes
    where recipe_id = #{recipeId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.RecipesExample">
    delete from recipes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.Recipes">
    insert into recipes(recipe_id, family_id, creator_id, food_name,
	 servings, created_at, updated_at)
    values (#{recipeId,jdbcType=VARCHAR}, #{familyId,jdbcType=VARCHAR}, #{creatorId,jdbcType=VARCHAR}, #{foodName,jdbcType=VARCHAR},
	 #{servings,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.Recipes">

    insert into recipes
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="recipeId != null">
        recipe_id,
      </if>
      <if test="familyId != null">
        family_id,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="foodName != null">
        food_name,
      </if>
      <if test="servings != null">
        servings,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recipeId != null">
        #{recipeId,jdbcType=VARCHAR}
      </if>
      <if test="familyId != null">
        #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="foodName != null">
        #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="servings != null">
        #{servings,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.RecipesExample" resultType="java.lang.Long">
    select count(*) from recipes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update recipes
    <set>
      <if test="record.recipeId != null">
       recipe_id = #{record.recipeId,jdbcType=VARCHAR},
      </if>
      <if test="record.familyId != null">
       family_id = #{record.familyId,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null">
       creator_id = #{record.creatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.foodName != null">
       food_name = #{record.foodName,jdbcType=VARCHAR},
      </if>
      <if test="record.servings != null">
       servings = #{record.servings,jdbcType=TINYINT},
      </if>
      <if test="record.createdAt != null">
       created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
       updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update recipes
    set recipe_id = #{record.recipeId,jdbcType=VARCHAR},
	  family_id = #{record.familyId,jdbcType=VARCHAR},
	  creator_id = #{record.creatorId,jdbcType=VARCHAR},
	  food_name = #{record.foodName,jdbcType=VARCHAR},
	  servings = #{record.servings,jdbcType=TINYINT},
	  created_at = #{record.createdAt,jdbcType=TIMESTAMP},
	  updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.Recipes">
    update recipes
    <set>
      <if test="familyId != null">
        family_id = #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="foodName != null">
        food_name = #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="servings != null">
        servings = #{servings,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where recipe_id = #{recipeId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.Recipes">
    update recipes
    set family_id = #{familyId,jdbcType=VARCHAR},
	  creator_id = #{creatorId,jdbcType=VARCHAR},
	  food_name = #{foodName,jdbcType=VARCHAR},
	  servings = #{servings,jdbcType=TINYINT},
	  created_at = #{createdAt,jdbcType=TIMESTAMP},
	  updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where recipe_id = #{recipeId,jdbcType=VARCHAR}
  </update>
</mapper>
