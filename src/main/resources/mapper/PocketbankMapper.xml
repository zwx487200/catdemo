<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.PocketbankMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.Pocketbank">
    <id column="pocket_bank_id" jdbcType="VARCHAR" property="pocketBankId"/>
    <result column="user_id" jdbcType="VARCHAR" property="userId"/>
    <result column="balance" jdbcType="DECIMAL" property="balance"/>
    <result column="current_balance" jdbcType="DECIMAL" property="currentBalance"/>
    <result column="fixed_balance" jdbcType="DECIMAL" property="fixedBalance"/>
    <result column="interest_rate" jdbcType="DECIMAL" property="interestRate"/>
    <result column="status" jdbcType="CHAR" property="status"/>
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pocket_bank_id, user_id, balance, current_balance, fixed_balance, interest_rate, status, 
	created_at, updated_at
  </sql>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.PocketbankExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pocketbank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pocketbank
    where pocket_bank_id = #{pocketBankId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pocketbank
    where pocket_bank_id = #{pocketBankId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.PocketbankExample">
    delete from pocketbank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.Pocketbank">
    insert into pocketbank(pocket_bank_id,user_id, balance, current_balance,
	 fixed_balance, interest_rate, status, created_at, 
	 updated_at)
    values (uuid(), #{userId,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{currentBalance,jdbcType=DECIMAL},
	 #{fixedBalance,jdbcType=DECIMAL}, #{interestRate,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
	 #{updatedAt,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.Pocketbank">
    insert into pocketbank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      pocket_bank_id,
      <if test="userId != null">
        user_id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="currentBalance != null">
        current_balance,
      </if>
      <if test="fixedBalance != null">
        fixed_balance,
      </if>
      <if test="interestRate != null">
        interest_rate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        uuid(),
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="currentBalance != null">
        #{currentBalance,jdbcType=DECIMAL},
      </if>
      <if test="fixedBalance != null">
        #{fixedBalance,jdbcType=DECIMAL},
      </if>
      <if test="interestRate != null">
        #{interestRate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.PocketbankExample" resultType="java.lang.Long">
    select count(*) from pocketbank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update pocketbank
    <set>
      <if test="record.pocketBankId != null">
       pocket_bank_id = #{record.pocketBankId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
       user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
       balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.currentBalance != null">
       current_balance = #{record.currentBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.fixedBalance != null">
       fixed_balance = #{record.fixedBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.interestRate != null">
       interest_rate = #{record.interestRate,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
       status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createdAt != null">
       created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
       updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update pocketbank
    set pocket_bank_id = #{record.pocketBankId,jdbcType=VARCHAR},
	  user_id = #{record.userId,jdbcType=VARCHAR},
	  balance = #{record.balance,jdbcType=DECIMAL},
	  current_balance = #{record.currentBalance,jdbcType=DECIMAL},
	  fixed_balance = #{record.fixedBalance,jdbcType=DECIMAL},
	  interest_rate = #{record.interestRate,jdbcType=DECIMAL},
	  status = #{record.status,jdbcType=CHAR},
	  created_at = #{record.createdAt,jdbcType=TIMESTAMP},
	  updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.Pocketbank">
    update pocketbank
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="currentBalance != null">
        current_balance = #{currentBalance,jdbcType=DECIMAL},
      </if>
      <if test="fixedBalance != null">
        fixed_balance = #{fixedBalance,jdbcType=DECIMAL},
      </if>
      <if test="interestRate != null">
        interest_rate = #{interestRate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pocket_bank_id = #{pocketBankId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.Pocketbank">
    update pocketbank
    set user_id = #{userId,jdbcType=VARCHAR},
	  balance = #{balance,jdbcType=DECIMAL},
	  current_balance = #{currentBalance,jdbcType=DECIMAL},
	  fixed_balance = #{fixedBalance,jdbcType=DECIMAL},
	  interest_rate = #{interestRate,jdbcType=DECIMAL},
	  status = #{status,jdbcType=CHAR},
	  created_at = #{createdAt,jdbcType=TIMESTAMP},
	  updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where pocket_bank_id = #{pocketBankId,jdbcType=VARCHAR}
  </update>
</mapper>
