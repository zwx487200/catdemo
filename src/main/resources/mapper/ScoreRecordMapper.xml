<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.ScoreRecordMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.ScoreRecord">
    <id column="id" jdbcType="VARCHAR" property="id"/>
    <result column="family_member_id" jdbcType="VARCHAR" property="familyMemberId"/>
    <result column="subject_id" jdbcType="VARCHAR" property="subjectId"/>
    <result column="exam_type" jdbcType="VARCHAR" property="examType"/>
    <result column="exam_date" jdbcType="DATE" property="examDate"/>
    <result column="score_scale" jdbcType="INTEGER" property="scoreScale"/>
    <result column="score" jdbcType="DECIMAL" property="score"/>
    <result column="grade" jdbcType="VARCHAR" property="grade"/>
    <result column="class_rank" jdbcType="INTEGER" property="classRank"/>
    <result column="grade_rank" jdbcType="INTEGER" property="gradeRank"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.catdemo.entity.ScoreRecord">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, family_member_id, subject_id, exam_type, exam_date, score_scale, score, 
	grade, class_rank, grade_rank, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>

  <select id="selectByExampleWithBLOBs" parameterType="com.example.catdemo.entity.ScoreRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from score_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.ScoreRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from score_record
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from score_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.ScoreRecordExample">
    delete from score_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.ScoreRecord">

    insert into score_record(id, family_member_id, subject_id, exam_type,
	 exam_date, score_scale, score, grade, 
	 class_rank, grade_rank, comment, create_time, 
	 update_time)
    values ( #{id,jdbcType=VARCHAR}, #{familyMemberId,jdbcType=VARCHAR}, #{subjectId,jdbcType=VARCHAR}, #{examType,jdbcType=VARCHAR},
	 #{examDate,jdbcType=DATE}, #{scoreScale,jdbcType=INTEGER}, #{score,jdbcType=DECIMAL}, #{grade,jdbcType=VARCHAR}, 
	 #{classRank,jdbcType=INTEGER}, #{gradeRank,jdbcType=INTEGER}, #{comment,jdbcType=LONGVARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
	 #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.ScoreRecord">

    insert into score_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
          id,
        </if>
      <if test="familyMemberId != null">
        family_member_id,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="examType != null">
        exam_type,
      </if>
      <if test="examDate != null">
        exam_date,
      </if>
      <if test="scoreScale != null">
        score_scale,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="classRank != null">
        class_rank,
      </if>
      <if test="gradeRank != null">
        grade_rank,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
          #{id,jdbcType=VARCHAR},
        </if>
      <if test="familyMemberId != null">
        #{familyMemberId,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="examType != null">
        #{examType,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null">
        #{examDate,jdbcType=DATE},
      </if>
      <if test="scoreScale != null">
        #{scoreScale,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="classRank != null">
        #{classRank,jdbcType=INTEGER},
      </if>
      <if test="gradeRank != null">
        #{gradeRank,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.ScoreRecordExample" resultType="java.lang.Long">
    select count(*) from score_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update score_record
    <set>
      <if test="record.id != null">
       id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.familyMemberId != null">
       family_member_id = #{record.familyMemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null">
       subject_id = #{record.subjectId,jdbcType=VARCHAR},
      </if>
      <if test="record.examType != null">
       exam_type = #{record.examType,jdbcType=VARCHAR},
      </if>
      <if test="record.examDate != null">
       exam_date = #{record.examDate,jdbcType=DATE},
      </if>
      <if test="record.scoreScale != null">
       score_scale = #{record.scoreScale,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
       score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.grade != null">
       grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.classRank != null">
       class_rank = #{record.classRank,jdbcType=INTEGER},
      </if>
      <if test="record.gradeRank != null">
       grade_rank = #{record.gradeRank,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
       comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.createTime != null">
       create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
       update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExampleWithBLOBs" parameterType="map">
    update score_record
    set id = #{record.id,jdbcType=VARCHAR},
	  family_member_id = #{record.familyMemberId,jdbcType=VARCHAR},
	  subject_id = #{record.subjectId,jdbcType=VARCHAR},
	  exam_type = #{record.examType,jdbcType=VARCHAR},
	  exam_date = #{record.examDate,jdbcType=DATE},
	  score_scale = #{record.scoreScale,jdbcType=INTEGER},
	  score = #{record.score,jdbcType=DECIMAL},
	  grade = #{record.grade,jdbcType=VARCHAR},
	  class_rank = #{record.classRank,jdbcType=INTEGER},
	  grade_rank = #{record.gradeRank,jdbcType=INTEGER},
	  comment = #{record.comment,jdbcType=LONGVARCHAR},
	  create_time = #{record.createTime,jdbcType=TIMESTAMP},
	  update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update score_record
    set id = #{record.id,jdbcType=VARCHAR},
	  family_member_id = #{record.familyMemberId,jdbcType=VARCHAR},
	  subject_id = #{record.subjectId,jdbcType=VARCHAR},
	  exam_type = #{record.examType,jdbcType=VARCHAR},
	  exam_date = #{record.examDate,jdbcType=DATE},
	  score_scale = #{record.scoreScale,jdbcType=INTEGER},
	  score = #{record.score,jdbcType=DECIMAL},
	  grade = #{record.grade,jdbcType=VARCHAR},
	  class_rank = #{record.classRank,jdbcType=INTEGER},
	  grade_rank = #{record.gradeRank,jdbcType=INTEGER},
	  create_time = #{record.createTime,jdbcType=TIMESTAMP},
	  update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.ScoreRecord">
    update score_record
    <set>
      <if test="familyMemberId != null">
        family_member_id = #{familyMemberId,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=VARCHAR},
      </if>
      <if test="examType != null">
        exam_type = #{examType,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null">
        exam_date = #{examDate,jdbcType=DATE},
      </if>
      <if test="scoreScale != null">
        score_scale = #{scoreScale,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="classRank != null">
        class_rank = #{classRank,jdbcType=INTEGER},
      </if>
      <if test="gradeRank != null">
        grade_rank = #{gradeRank,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.catdemo.entity.ScoreRecord">
    update score_record
    set family_member_id = #{familyMemberId,jdbcType=VARCHAR},
	  subject_id = #{subjectId,jdbcType=VARCHAR},
	  exam_type = #{examType,jdbcType=VARCHAR},
	  exam_date = #{examDate,jdbcType=DATE},
	  score_scale = #{scoreScale,jdbcType=INTEGER},
	  score = #{score,jdbcType=DECIMAL},
	  grade = #{grade,jdbcType=VARCHAR},
	  class_rank = #{classRank,jdbcType=INTEGER},
	  grade_rank = #{gradeRank,jdbcType=INTEGER},
	  comment = #{comment,jdbcType=LONGVARCHAR},
	  create_time = #{createTime,jdbcType=TIMESTAMP},
	  update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.ScoreRecord">
    update score_record
    set family_member_id = #{familyMemberId,jdbcType=VARCHAR},
	  subject_id = #{subjectId,jdbcType=VARCHAR},
	  exam_type = #{examType,jdbcType=VARCHAR},
	  exam_date = #{examDate,jdbcType=DATE},
	  score_scale = #{scoreScale,jdbcType=INTEGER},
	  score = #{score,jdbcType=DECIMAL},
	  grade = #{grade,jdbcType=VARCHAR},
	  class_rank = #{classRank,jdbcType=INTEGER},
	  grade_rank = #{gradeRank,jdbcType=INTEGER},
	  create_time = #{createTime,jdbcType=TIMESTAMP},
	  update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
