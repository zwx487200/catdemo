<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.PetBillMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.PetBill">
    <id column="id" jdbcType="VARCHAR" property="id"/>
    <result column="pet_id" jdbcType="VARCHAR" property="petId"/>
    <result column="bill_type" jdbcType="VARCHAR" property="billType"/>
    <result column="amount" jdbcType="DECIMAL" property="amount"/>
    <result column="bill_date" jdbcType="DATE" property="billDate"/>
    <result column="payment_method" jdbcType="TINYINT" property="paymentMethod"/>
    <result column="category" jdbcType="VARCHAR" property="category"/>
    <result column="family_id" jdbcType="VARCHAR" property="familyId"/>
    <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.catdemo.entity.PetBill">
    <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    <result column="attachment_urls" jdbcType="LONGVARCHAR" property="attachmentUrls"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pet_id, bill_type, amount, bill_date, payment_method, category, 
	family_id, created_by, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    description, attachment_urls
  </sql>

  <select id="selectByExampleWithBLOBs" parameterType="com.example.catdemo.entity.PetBillExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pet_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.PetBillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pet_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pet_bill
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pet_bill
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.PetBillExample">
    delete from pet_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.PetBill">

    insert into pet_bill(id,pet_id, bill_type, amount,
	 bill_date, payment_method, category, description, 
	 attachment_urls, family_id, created_by, create_time, 
	 update_time)
    values (#{id,jdbcType=VARCHAR}, #{petId,jdbcType=VARCHAR}, #{billType,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL},
	 #{billDate,jdbcType=DATE}, #{paymentMethod,jdbcType=TINYINT}, #{category,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, 
	 #{attachmentUrls,jdbcType=LONGVARCHAR}, #{familyId,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
	 #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.PetBill">

    insert into pet_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
        id,
      </if>
      <if test="petId != null">
        pet_id,
      </if>
      <if test="billType != null">
        bill_type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="billDate != null">
        bill_date,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="attachmentUrls != null">
        attachment_urls,
      </if>
      <if test="familyId != null">
        family_id,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="petId != null">
        #{petId,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="billDate != null">
        #{billDate,jdbcType=DATE},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentUrls != null">
        #{attachmentUrls,jdbcType=LONGVARCHAR},
      </if>
      <if test="familyId != null">
        #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.PetBillExample" resultType="java.lang.Long">
    select count(*) from pet_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update pet_bill
    <set>
      <if test="record.id != null">
       id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.petId != null">
       pet_id = #{record.petId,jdbcType=VARCHAR},
      </if>
      <if test="record.billType != null">
       bill_type = #{record.billType,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
       amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.billDate != null">
       bill_date = #{record.billDate,jdbcType=DATE},
      </if>
      <if test="record.paymentMethod != null">
       payment_method = #{record.paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="record.category != null">
       category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
       description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.attachmentUrls != null">
       attachment_urls = #{record.attachmentUrls,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.familyId != null">
       family_id = #{record.familyId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
       created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
       create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
       update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExampleWithBLOBs" parameterType="map">
    update pet_bill
    set id = #{record.id,jdbcType=VARCHAR},
	  pet_id = #{record.petId,jdbcType=VARCHAR},
	  bill_type = #{record.billType,jdbcType=VARCHAR},
	  amount = #{record.amount,jdbcType=DECIMAL},
	  bill_date = #{record.billDate,jdbcType=DATE},
	  payment_method = #{record.paymentMethod,jdbcType=TINYINT},
	  category = #{record.category,jdbcType=VARCHAR},
	  description = #{record.description,jdbcType=LONGVARCHAR},
	  attachment_urls = #{record.attachmentUrls,jdbcType=LONGVARCHAR},
	  family_id = #{record.familyId,jdbcType=VARCHAR},
	  created_by = #{record.createdBy,jdbcType=VARCHAR},
	  create_time = #{record.createTime,jdbcType=TIMESTAMP},
	  update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update pet_bill
    set id = #{record.id,jdbcType=VARCHAR},
	  pet_id = #{record.petId,jdbcType=VARCHAR},
	  bill_type = #{record.billType,jdbcType=VARCHAR},
	  amount = #{record.amount,jdbcType=DECIMAL},
	  bill_date = #{record.billDate,jdbcType=DATE},
	  payment_method = #{record.paymentMethod,jdbcType=TINYINT},
	  category = #{record.category,jdbcType=VARCHAR},
	  family_id = #{record.familyId,jdbcType=VARCHAR},
	  created_by = #{record.createdBy,jdbcType=VARCHAR},
	  create_time = #{record.createTime,jdbcType=TIMESTAMP},
	  update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.PetBill">
    update pet_bill
    <set>
      <if test="petId != null">
        pet_id = #{petId,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        bill_type = #{billType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="billDate != null">
        bill_date = #{billDate,jdbcType=DATE},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=TINYINT},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="attachmentUrls != null">
        attachment_urls = #{attachmentUrls,jdbcType=LONGVARCHAR},
      </if>
      <if test="familyId != null">
        family_id = #{familyId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.catdemo.entity.PetBill">
    update pet_bill
    set pet_id = #{petId,jdbcType=VARCHAR},
	  bill_type = #{billType,jdbcType=VARCHAR},
	  amount = #{amount,jdbcType=DECIMAL},
	  bill_date = #{billDate,jdbcType=DATE},
	  payment_method = #{paymentMethod,jdbcType=TINYINT},
	  category = #{category,jdbcType=VARCHAR},
	  description = #{description,jdbcType=LONGVARCHAR},
	  attachment_urls = #{attachmentUrls,jdbcType=LONGVARCHAR},
	  family_id = #{familyId,jdbcType=VARCHAR},
	  created_by = #{createdBy,jdbcType=VARCHAR},
	  create_time = #{createTime,jdbcType=TIMESTAMP},
	  update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.PetBill">
    update pet_bill
    set pet_id = #{petId,jdbcType=VARCHAR},
	  bill_type = #{billType,jdbcType=VARCHAR},
	  amount = #{amount,jdbcType=DECIMAL},
	  bill_date = #{billDate,jdbcType=DATE},
	  payment_method = #{paymentMethod,jdbcType=TINYINT},
	  category = #{category,jdbcType=VARCHAR},
	  family_id = #{familyId,jdbcType=VARCHAR},
	  created_by = #{createdBy,jdbcType=VARCHAR},
	  create_time = #{createTime,jdbcType=TIMESTAMP},
	  update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
