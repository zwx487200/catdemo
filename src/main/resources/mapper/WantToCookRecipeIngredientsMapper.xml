<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.catdemo.mapper.WantToCookRecipeIngredientsMapper">

  <resultMap id="BaseResultMap" type="com.example.catdemo.entity.WantToCookRecipeIngredients">
    <id column="id" jdbcType="VARCHAR" property="id"/>
    <result column="want_to_cook_id" jdbcType="VARCHAR" property="wantToCookId"/>
    <result column="recipe_ingredient_id" jdbcType="VARCHAR" property="recipeIngredientId"/>
    <result column="status" jdbcType="TINYINT" property="status"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{ criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{ criterion.value} and #{ criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{ listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, want_to_cook_id, recipe_ingredient_id, status, create_time, update_time
  </sql>

  <select id="selectByExample" parameterType="com.example.catdemo.entity.WantToCookRecipeIngredientsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from want_to_cook_recipe_ingredients
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from want_to_cook_recipe_ingredients
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from want_to_cook_recipe_ingredients
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByExample" parameterType="com.example.catdemo.entity.WantToCookRecipeIngredientsExample">
    delete from want_to_cook_recipe_ingredients
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.example.catdemo.entity.WantToCookRecipeIngredients">

    insert into want_to_cook_recipe_ingredients(id, want_to_cook_id, recipe_ingredient_id, status,
	 create_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{wantToCookId,jdbcType=VARCHAR}, #{recipeIngredientId,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
	 #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.example.catdemo.entity.WantToCookRecipeIngredients">

    insert into want_to_cook_recipe_ingredients
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
        id,
      </if>
      <if test="wantToCookId != null">
        want_to_cook_id,
      </if>
      <if test="recipeIngredientId != null">
        recipe_ingredient_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="wantToCookId != null">
        #{wantToCookId,jdbcType=VARCHAR},
      </if>
      <if test="recipeIngredientId != null">
        #{recipeIngredientId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.example.catdemo.entity.WantToCookRecipeIngredientsExample" resultType="java.lang.Long">
    select count(*) from want_to_cook_recipe_ingredients
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update want_to_cook_recipe_ingredients
    <set>
      <if test="record.id != null">
       id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.wantToCookId != null">
       want_to_cook_id = #{record.wantToCookId,jdbcType=VARCHAR},
      </if>
      <if test="record.recipeIngredientId != null">
       recipe_ingredient_id = #{record.recipeIngredientId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
       status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
       create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
       update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update want_to_cook_recipe_ingredients
    set id = #{record.id,jdbcType=VARCHAR},
	  want_to_cook_id = #{record.wantToCookId,jdbcType=VARCHAR},
	  recipe_ingredient_id = #{record.recipeIngredientId,jdbcType=VARCHAR},
	  status = #{record.status,jdbcType=TINYINT},
	  create_time = #{record.createTime,jdbcType=TIMESTAMP},
	  update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.catdemo.entity.WantToCookRecipeIngredients">
    update want_to_cook_recipe_ingredients
    <set>
      <if test="wantToCookId != null">
        want_to_cook_id = #{wantToCookId,jdbcType=VARCHAR},
      </if>
      <if test="recipeIngredientId != null">
        recipe_ingredient_id = #{recipeIngredientId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.catdemo.entity.WantToCookRecipeIngredients">
    update want_to_cook_recipe_ingredients
    set want_to_cook_id = #{wantToCookId,jdbcType=VARCHAR},
	  recipe_ingredient_id = #{recipeIngredientId,jdbcType=VARCHAR},
	  status = #{status,jdbcType=TINYINT},
	  create_time = #{createTime,jdbcType=TIMESTAMP},
	  update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
